name: 'Validate Study Inputs'
description: 'Validates study provisioning inputs'
inputs:
  study_title:
    description: 'Study title to validate'
    required: true
  lead_name:
    description: 'Study lead name to validate'
    required: true
  lead_github:
    description: 'GitHub username to validate'
    required: true
  target_date:
    description: 'Target date in YYYY-MM-DD format'
    required: false

outputs:
  repo_name:
    description: 'Generated repository name'
    value: ${{ steps.generate.outputs.repo_name }}
  target_date:
    description: 'Target date (either provided or default 6 months from provisioning)'
    value: ${{ steps.dates.outputs.target_date }}
  start_date:
    description: 'Start date (day of provisioning)'
    value: ${{ steps.dates.outputs.start_date }}

runs:
  using: 'composite'
  steps:
    - name: Set default dates
      id: dates
      shell: bash
      run: |
        # Set start date to today
        START_DATE=$(date +"%Y-%m-%d")
        echo "start_date=$START_DATE" >> $GITHUB_OUTPUT
        echo "✅ Start date set: $START_DATE"
        
        # Set target date - use provided date or default to 6 months from today
        TARGET_INPUT="${{ inputs.target_date }}"
        TARGET_INPUT=$(echo "$TARGET_INPUT" | tr -d '[:space:]')  # Remove all whitespace
        if [[ -n "$TARGET_INPUT" ]]; then
          # Validate provided date format
          if ! date -d "$TARGET_INPUT" >/dev/null 2>&1; then
            echo "❌ Invalid date format. Use YYYY-MM-DD"
            exit 1
          fi
          TARGET_DATE="$TARGET_INPUT"
          echo "✅ Using provided target date: $TARGET_DATE"
        else
          # Default to 6 months from today
          TARGET_DATE=$(date -d "+6 months" +"%Y-%m-%d")
          echo "✅ Using default target date (6 months from provisioning): $TARGET_DATE"
        fi
        echo "target_date=$TARGET_DATE" >> $GITHUB_OUTPUT

    - name: Validate GitHub username
      shell: bash
      run: |
        if [[ ! "${{ inputs.lead_github }}" =~ ^[a-zA-Z0-9]([a-zA-Z0-9_-]*[a-zA-Z0-9])?$ ]]; then
          echo "❌ Invalid GitHub username format: ${{ inputs.lead_github }}"
          exit 1
        fi
        echo "✅ GitHub username validated: ${{ inputs.lead_github }}"

    - name: Generate repository name
      id: generate
      shell: bash
      run: |
        # Generate repo name from title
        REPO_NAME=$(echo "study-${{ inputs.study_title }}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9-]/-/g' | sed 's/--*/-/g')
        echo "repo_name=$REPO_NAME" >> $GITHUB_OUTPUT
        echo "✅ Generated repository name: $REPO_NAME"

    - name: Validate inputs summary
      shell: bash
      run: |
        echo "✅ All inputs validated successfully"
        echo "  Study: ${{ inputs.study_title }}"
        echo "  Lead: ${{ inputs.lead_name }} (@${{ inputs.lead_github }})"
        echo "  Start Date: ${{ steps.dates.outputs.start_date }}"
        echo "  Target Date: ${{ steps.dates.outputs.target_date }}"